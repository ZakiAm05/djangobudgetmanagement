"""
Django settings for Autorisation_absence project.

Generated by 'django-admin startproject' using Django 3.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 's^^0r%xf#ul6pd90ug8!#kq!=4*d+h0uyoga048cr4jh#wsxz&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost',
                 '127.0.0.1',
                 ]


# Application definition



INSTALLED_APPS = [
    'jet',
    'jet.dashboard',
    'rest_framework',
    # 'django_static_fontawesome',

    ########### Native
    'inline_actions',
    'guardian',
    ###################
    'django.contrib.admin',
    'django.contrib.humanize',

    # 'django.contrib.admindocs',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    ###########Extentions

    ########### Custom
    'core',
    'Config',
    'Reporting',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Settings.urls'

TEMPLATES =[
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Settings.wsgi.application'



REST_FRAMEWORK={
    'DEFAULT_PERMISSION8CLASSES':[
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}
################static files
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static_files")
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

######################media
MEDIA_URL = '/media/'
# MEDIA_ROOT = BASE_DIR + '/media'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASE_ROUTERS=['Config.DB_Router.DB_Router',]
DATABASES = {


    # 'default': {
    #     'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #     'NAME': 'Absence',
    #     'USER': 'postgres',
    #     'PASSWORD': '@Wxcvbn1993',
    #     'HOST': 'Test-PG',
    #     'PORT': '5432',
    # }
    # 'default': {
    #     'ENGINE': 'sql_server.pyodbc',
    #     'NAME': 'BD_AutorisationsPR',
    #     'HOST': 'srvbdtest2014',
    #     'PORT': '',
    #     'OPTIONS': {
    #         'driver': 'SQL Server Native Client 11.0',
    #     }
    # },
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': 'dbtest',  # This is where you put the name of the db file.
        # If one doesn't exist, it will be created at migration time.
    },


    # 'BD_GRH':{
    #     'ENGINE': 'sql_server.pyodbc',
    #     'NAME': 'BD_GRH',
    #     'HOST': 'sqlserver2014',
    #     'PORT': '',
    #     'OPTIONS': {
    #         'driver': 'SQL Server Native Client 11.0',
    #     }
    # },


}
AUTHENTICATION_BACKENDS=(
    'django.contrib.auth.backends.ModelBackend', #default
    'guardian.backends.ObjectPermissionBackend',
)


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'fr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

JET_DEFAULT_THEME = 'light-gray'
JET_THEMES = [
    {
        'theme': 'default', # theme folder name
        'color': '#47bac1', # color of the theme's button in user menu
        'title': 'Default' # theme title
    },
    {
        'theme': 'green',
        'color': '#44b78b',
        'title': 'Green'
    },
    {
        'theme': 'light-green',
        'color': '#2faa60',
        'title': 'Light Green'
    },
    {
        'theme': 'light-violet',
        'color': '#a464c4',
        'title': 'Light Violet'
    },
    {
        'theme': 'light-blue',
        'color': '#5EADDE',
        'title': 'Light Blue'
    },
    {
        'theme': 'light-gray',
        'color': '#222',
        'title': 'Light Gray'
    }
]



JET_SIDE_MENU_COMPACT = False
JET_CHANGE_FORM_SIBLING_LINKS = True
# JET_INDEX_DASHBOARD = 'jet.dashboard.dashboard.DefaultIndexDashboard'
JET_INDEX_DASHBOARD = 'Settings.dashboard.CustomIndexDashboard'
# JET_APP_INDEX_DASHBOARD = 'dashboared.CustomIndexDashboard'
JET_APP_INDEX_DASHBOARD = 'jet.dashboard.dashboard.DefaultAppIndexDashboard'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/


